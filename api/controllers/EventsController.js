// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = {

    /* EventsController.index() */
    index: function(req, res) {
      return Events.find().sort({
        _id: 'desc'
      }).exec(function(error, events) {
        if (error) {
          return next(error);
        }
        return res.view({
          title: 'Events manage',
          events: events
        });
      });
    },

    /* EventsController.create() */
    create: function(req, res) {
      var params;
      params = req.params.all();
      if (req.method === 'POST') {
        if (params.event_id === '') {
          params.event_id = new Date().getTime().toString();
          return Events.create(params).exec(function(error, event) {
            if (error && error.invalidAttributes) {
              return res.json({
                errors: MyServices.modelValidation(Events, error.invalidAttributes)
              });
            }
            sails.io.sockets.emit('insertEvent', event);
            return res.json({
              data: {
                action: 'insert',
                status: true
              }
            });
          });
        } else {
          return Events.find({
            event_id: params.event_id
          }).limit(1).exec(function(error, event) {
            var _event;
            if (error) {
              return next(error);
            }
            _event = event[0];
            return Events.update(event[0], params, {
              upsert: true
            }).exec(function(error, status) {
              if (error && error.invalidAttributes) {
                return res.json({
                  errors: MyServices.modelValidation(Events, error.invalidAttributes)
                });
              }
              sails.io.sockets.emit('updateEvent', status[0]);
              return res.json({
                data: {
                  action: 'update',
                  status: true
                }
              });
            });
          });
        }
      } else {
        return res.view({
          title: 'Add new event'
        });
      }
    },

    /* EventsController.edit() */
    edit: function(req, res, next) {
      var eventID;
      eventID = req.params.id;
      return Events.find({
        event_id: eventID
      }).limit(1).exec(function(error, event) {
        if (error) {
          return next(error);
        }
        return res.view('events/create', {
          event: event[0],
          title: 'Edit event'
        });
      });
    },
    'delete': function(req, res, next) {
      var params;
      params = req.params.all();
      return Events.destroy({
        event_id: params.id
      }).exec(function(error, deleteStatus) {
        if (error) {
          return next(error);
        }
        return res.json({
          status: deleteStatus
        });
      });
    }
  };

}).call(this);
